name: build

on:
  push:
    tags:
    - v*
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{ steps.locate-artifact.outputs.file-name }}
      dotslash-version: ${{ steps.dotslash-version.outputs.dotslash-version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set DotSlash version
      id: dotslash-version
      run: |-
        dotslash_version=$(gh api repos/facebook/dotslash/releases/latest --jq '.tag_name')
        echo "dotslash-version=${dotslash_version}" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Install UV
      uses: astral-sh/setup-uv@v6

    - name: Build source distribution
      run: uv build --sdist
      env:
        DOTSLASH_VERSION: ${{ steps.dotslash-version.outputs.dotslash-version }}

    - name: Locate source distribution
      id: locate-artifact
      run: |-
        sdist_name=$(basename dist/*)
        echo "file-name=${sdist_name}" >> $GITHUB_OUTPUT

    - name: Upload source distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact-sdist
        path: dist/${{ steps.locate-artifact.outputs.file-name }}
        if-no-files-found: error

  wheels:
    name: Build wheels for ${{ matrix.archs }} on ${{ matrix.os }}
    needs:
    - sdist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-24.04-arm
          archs: aarch64
        - os: ubuntu-latest
          archs: x86_64
        - os: macos-latest
          archs: arm64
        - os: macos-15-intel
          archs: x86_64
        - os: windows-11-arm
          archs: ARM64
        - os: windows-latest
          archs: AMD64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Download source distribution
      uses: actions/download-artifact@v4
      with:
        name: artifact-sdist
        path: dist

    - name: Install UV
      if: runner.os != 'Linux'
      uses: astral-sh/setup-uv@v6

    - name: Build wheels
      uses: pypa/cibuildwheel@v3.2.1
      with:
        package-dir: dist/${{ needs.sdist.outputs.artifact-name }}
      env:
        DOTSLASH_VERSION: ${{ needs.sdist.outputs.dotslash-version }}
        CIBW_ARCHS: ${{ matrix.archs }}

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifact-wheels-${{ matrix.os }}-${{ matrix.archs }}
        path: wheelhouse/*.whl
        if-no-files-found: error

  publish:
    name: Publish release
    needs:
    - sdist
    - wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    permissions:
      id-token: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: artifact-*
        merge-multiple: true
        path: dist

    - name: Push build artifacts to PyPI
      uses: pypa/gh-action-pypi-publish@v1.13.0
      with:
        skip-existing: true
